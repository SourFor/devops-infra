---
- name: Pull Kibana image
  ansible.builtin.command: podman pull {{ kibana_image }}

- name: Create Kibana directory
  file:
    path: /etc/kibana
    state: directory

# - name: Copy Kibana config file
#   copy:
#     src: files/kibana/kibana.yml
#     dest: /etc/kibana/kibana.yml

- name: Copy Kibana config file
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    mode: 0764

# - name: Stop Kibana container
#   ansible.builtin.command: podman rm -f kibana
#   ignore_errors: true

# - name: Start Kibana container
#   ansible.builtin.command: podman run -d -ti --name kibana --network {{ elk_network }} -p {{ kibana_port }}:5601 -v /etc/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml {{ kibana_image }}

- name: Configure kibana systemd service
  template:
    src: kibana.service.j2
    dest: "/usr/lib/systemd/system/kibana.service"
  notify: Just force systemd to reread configs

- name: Restart kibana
  ansible.builtin.systemd:
    name: "kibana.service"
    state: restarted
    enabled: yes
  become: true

- name: Wait for Kibana to restart
  uri:
    url: "{{ elk_http_protocol }}://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:{{ kibana_port }}"
    method: GET
    status_code: 200
    timeout: 5
    return_content: yes
  register: kibana_response
  until: kibana_response.status == 200
  retries: 10
  delay: 10
  become: true